%YAML 1.2
---
# https://www.sublimetext.com/docs/3/syntax.html
name: SSH Config
file_extensions:
  - ssh_config
scope: text.ssh_config
contexts:
  main:
    - include: comments
    - include: host
    - include: hostname
    - include: match
    - include: localcommand
    - include: proxycommand
    - include: generic-option

  tokens:
    # http://man7.org/linux/man-pages/man5/ssh_config.5.html#TOKENS
    - match: '%[%CdhiLlnprTu]'
      scope: constant.character.escape.ssh_config

  pop-nl:
    - match: '\n'
      pop: true

  pop-before-nl:
    - match: '(?=\n)'
      pop: true

  pop-before-match-option:
    - include: pop-before-nl
    - match: (?i)(?=[ \t]*(canonical|exec|host|originalhost|user|localuser))
      pop: true

  host:
    - match: '(?i)^[ \t]*(host)\b'
      captures:
        1: keyword.declaration.host-alias.ssh_config
      push:
        - include: pop-nl
        - include: hostname-with-wildcards

  hostname:
    - match: '(?i)^[ \t]*(hostname)\b'
      captures:
        1: keyword.declaration.host.ssh_config
      push:
        - include: pop-nl
        - include: hostname-or-ip-value

  hostname-or-ip-value:
    - match: |-
        (?x:
          (
            ((?:\d{1,3}\.){3}\d{1,3})|     # simple IPv4
            ((?:[A-f0-9:]+:+)+[A-f0-9]+)|  # simple IPv6
            (\S+)                          # anything else
          )
          [ \t]*                           # any whitespace
          (\S*)                            # anything else on the line
        )
      captures:
        1: meta.string.host.ssh_config
        2: constant.numeric.ip4.ssh_config
        3: constant.numeric.ip6.ssh_config
        4: string.unquoted.hostname.ssh_config
        5: invalid.illegal.ssh_config

  hostname-with-wildcards:
    # http://man7.org/linux/man-pages/man5/ssh_config.5.html#PATTERNS
    - match: '[^\s*?]+'
      scope: entity.name.label.host-alias.ssh_config
    - match: '\*|\?'
      scope: entity.name.label.host-alias.ssh_config constant.language.wildcard.ssh_config

  match-exec-tokens:
    # http://man7.org/linux/man-pages/man5/ssh_config.5.html#TOKENS
    - match: '%[%hiLlnpru]'
      scope: constant.character.escape.ssh_config

  match:
    - match: '(?i)^[ \t]*(match)\b'
      captures:
        1: keyword.control.conditional.ssh_config
      push:
        - include: pop-nl
        - match: (?i)\b(canonical)\b
          scope: keyword.other.ssh_config

        - match: (?i)\b(exec)\b[ \t]*(\")
          captures:
            1: keyword.other.ssh_config
            2: string.quoted.double.ssh_config punctuation.definition.string.begin.ssh_config
          escape: (?<!\\)\"(?=\s*(?:#.*)?)
          escape_captures:
            0: string.quoted.double.ssh_config punctuation.definition.string.end.ssh_config
          embed: scope:source.shell
        - match: (?i)\b(exec)\b[ \t]+
          captures:
            1: keyword.other.ssh_config
          with_prototype:
            - include: match-exec-tokens
            - include: pop-before-match-option
          push:
            - meta_content_scope: source.embedded.shell.bash
            - include: scope:source.shell.bash

        - match: (?i)\b((original)?host)\b
          scope: keyword.other.ssh_config
          push:
            - include: pop-before-match-option
            - include: hostname-with-wildcards

        - match: (?i)\b((local)?user)\b
          scope: keyword.other.ssh_config
          push:
            - include: pop-before-match-option
            - match: '\S'
              scope: string.unquoted.ssh_config

  proxycommand:
    - match: '^\s*(?i)(proxycommand)[ \t]+'
      captures:
        1: keyword.other.ssh_config
      with_prototype:
        - match: '%[%hpr]'
          scope: constant.character.escape.ssh_config
      push:
        - meta_content_scope: source.embedded.shell.bash
        - include: scope:source.shell.bash
        - include: pop-nl

  localcommand:
    - match: '^\s*(?i)(localcommand)[ \t]+'
      captures:
        1: keyword.other.ssh_config
      with_prototype:
        - match: '%[%CdhilnprTu]'
          scope: constant.character.escape.ssh_config
      push:
        - meta_content_scope: source.embedded.shell.bash
        - include: scope:source.shell.bash
        - include: pop-nl

  generic-option:
    - match: '^\s*([a-zA-Z1]+)[ \t]+'
      captures:
        1: keyword.other.ssh_config
      push:
        - match: '(?i)\b(yes|no)\b'
          scope: constant.language.boolean.ssh_config
        - include: tokens
        - match: '\d+'
          scope: constant.numeric.ssh_config
        - match: '\S'
          scope: string.unquoted.ssh_config
          push:
            - meta_content_scope: string.unquoted.ssh_config
            - include: tokens
            - include: pop-before-nl
        - include: pop-nl

  comments:
    - match: '^\s*(#)'
      captures:
        1: punctuation.definition.comment.ssh_config
      push:
        - meta_scope: comment.line.number-sign.ssh_config
        - include: pop-nl
    - match: '^\s*(;)'
      captures:
        1: punctuation.definition.comment.ssh_config
      push:
        - meta_scope: comment.line.semi-colon.ssh_config
        - include: pop-nl
