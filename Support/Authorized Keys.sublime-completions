{
	"scope": "text.authorized_keys - comment - string",
	"completions": [
		"agent-forwarding\tReenable `restrict`ed agent forwarding",
		"cert-authority\tMark key as a CA",
		{ "trigger": "command\tRun command when key is used", "contents": "command=\"${0}\"" },
		{ "trigger": "environment\tSet one environment var", "contents": "environment=\"${1:NAME}=${2:value}\"" },
		{ "trigger": "expiry-time\tGive this key an expiration", "contents": "expiry-time=\"${0:YYYYMMDD}\"" },
		{ "trigger": "from\tWhitelist remote hosts", "contents": "from=\"${0:hosts}\"" },
		"no-agent-forwarding\tDisable agent forwarding",
		"no-port-forwarding\tDisable port forwarding",
		"no-pty\tDisable tty allocation",
		"no-user-rc\tDisable ~/.ssh/rc execution",
		"no-X11-forwarding\tDisable X11 forwarding",
		{ "trigger": "permitlisten\tWhitelist remote (-R) port forwarding", "contents": "permitlisten=\"${1:[host:]port}\"" },
		{ "trigger": "permitopen\tWhitelist local (-L) port forwarding", "contents": "permitopen=\"${1:host}:${2:port}\"" },
		"port-forwarding\tReenable `restrict`ed port forwarding",
		{ "trigger": "principals\tWhitelist CA principals", "contents": "principals=\"${0:principals}\"" },
		"pty\tReenable `restrict`ed tty allocation",
		"no-touch-required\tSkip security key touch",
		"restrict\tEnable ALL restrictions",
		{ "trigger": "tunnel\tForce specific tun device", "contents": "tunnel=\"${0:N}\"" },
		"user-rc\tReenable `restrict`ed ~/.ssh/rc execution",
		"X11-forwarding\tReenable `restrict`ed X11 forwarding",
	]
}
